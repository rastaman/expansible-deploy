---
# This playbook deploys a Mesos cluster with Marathon and Qubits's Bamboo.
# RUN: ansible-playbook --ask-sudo-pass -i hosts site.yml

- name: install-base
  hosts: bootstrap
  remote_user: vagrant
  sudo: True

  roles:
    - { role: base, install_mode: "default", tags: ["bootstrap"] }
    - { role: squid, tags: ["bootstrap"] }
    - { role: base, install_mode: "setup_yum", tags: ["bootstrap"] }

- name: deploy-nodes
  hosts: nodes
  remote_user: vagrant
  sudo: True

  roles:
    - { role: base, install_mode: "default" }
    - { role: base, install_mode: "setup_yum" }

- name: deploy-zookeeper
  hosts: zookeeper
  remote_user: vagrant
  sudo: True

  roles:
    - { role: zookeeper, tags: ["zookeeper"] }

- name: deploy-docker
  hosts: docker
  remote_user: vagrant
  sudo: True

  roles:
    - { role: docker, tags: ["docker","bootstrap"] }

- name: deploy-docker-registry
  hosts: docker-registry
  remote_user: vagrant
  sudo: True

  roles:
    - { role: docker-registry, tags: ["docker","bootstrap"] }

- name: deploy and configure the mesos masters
  hosts: mesos_masters
  remote_user: vagrant
  sudo: True

  roles:
    - { role: mesos, mesos_install_mode: "master", tags: ["mesos-master"] }

- name: deploy and configure the mesos slaves
  hosts: mesos_slaves
  remote_user: vagrant
  sudo: True

  roles:
    - { role: mesos, mesos_install_mode: "slave", tags: ["mesos-slave"] }

- name: deploy and configure the haproxy
  hosts: haproxy
  remote_user: vagrant
  sudo: True

  roles:
    - { role: base, install_mode: "default" }
    - { role: base, install_mode: "setup_yum" }
    - { role: bamboo, bamboo_install_mode: "haproxy", tags: ["haproxy"] }

- name: install developer box
  hosts: all
  remote_user: vagrant
  sudo: True

  roles:
    - { role: devbox, tags: ["bootstrap"] }

- name: install ceph (preflight check)
  hosts: ceph_base
  remote_user: vagrant
  sudo: true

  roles:
    - { role: ceph-preflight, tags: ["ceph"] }

- name: open ports for mesos cluster
  hosts: nodes
  sudo: true
  roles:
    - { role: firewalld, install_mode: "mesos", tags: ["misc"] }

- name: open ports for haproxy/bamboo
  hosts: haproxy
  sudo: true
  roles:
    - { role: firewalld, install_mode: "haproxy", tags: ["misc"] }

- name: open ports for ceph cluster
  hosts: ceph_base
  sudo: true
  roles:
    - { role: firewalld, install_mode: "ceph", tags: ["misc"] }


- name: install ceph (preflight check)
  hosts: ceph_base
  remote_user: vagrant
  sudo: true
  roles:
    - { role: ceph-preflight, tags: ["ceph"] }

- name: setup ceph admin
  hosts: ceph_admin
  remote_user: vagrant
  sudo: false
  roles:
    - { role: ceph-admin, ceph_install_mode: "base_setup", tags: ["ceph-admin"] }

- name: copy public key to nodes and add ceph to sudoers
  hosts: ceph_base
  roles:
    - { role: ceph-node, ceph_install_mode: "base_setup" }

- name: create cluster
  hosts: ceph_admin
  remote_user: ceph
  sudo: true
  roles:
    - { role: ceph-admin, ceph_install_mode: "create_cluster", tags: ["ceph-create-cluster"] }

- name: init Ceph OSD for the cluster
  hosts: ceph_admin
  remote_user: ceph
  sudo: true
  roles:
    - { role: ceph-admin, ceph_install_mode: "init_cluster", tags: ["ceph-init-cluster"] }

- name: create OSD on nodes
  hosts: ceph_node
  sudo: true
  roles:
    - { role: ceph-node, ceph_install_mode: "create_osd", tags: ["ceph-create-osds"] }

- name: Prepare and activate OSD volumes from admin
  hosts: ceph_admin
  sudo: true
  roles:
    - { role: ceph-admin, ceph_install_mode: "create_osd", tags: ["ceph-create-osds"] }

- name: Create metadata server and additional monitors
  hosts: ceph_admin
  sudo: true
  roles:
    - { role: ceph-admin, ceph_install_mode: "finish_setup", tags: ["ceph-finish-setup"] }

- name: Prepare RBD device
  hosts: ceph_admin
  sudo: true
  roles:
    - { role: ceph-rbd, tags: ["ceph-rbd"] }
